doctype html
html(ng-app="quassel", ng-controller="ConfigController")
    head
      meta(charset='utf-8')
      title Quassel Web App
      meta(http-equiv='X-UA-Compatible', content='IE=edge')
      meta(name='description', content='Quassel Web App')
      meta(name='author', content='Joël Charles')
      meta(name='author', content='Johannes Siipola')
      link(rel='icon', href='favicon.ico')
      link(rel='stylesheet', href='#{settings.prefixpath}/stylesheets/bootstrap.min.css')
      link(rel='stylesheet', href='#{settings.prefixpath}/stylesheets/fonts.css')
      link(rel='stylesheet', href='#{settings.prefixpath}/stylesheets/theme-#{settings.theme}.css', default-theme="#{settings.theme}", theme="theme")
      
    body.login-page
      script(type="text/ng-template", id="modalJoinChannel.html")
        .modal-header
          button.close(type='button', data-dismiss='modal', aria-hidden='true') ×
          h4#myModalLabel.modal-title
            | Join a channel on
            span#join-network-name  {{network.networkName}}
        .modal-body
          .form-group
            input.form-control(type='text', placeholder='Enter channel name', ng-model="name")
        .modal-footer
          button.btn.btn-default(type='button', ng-click='cancel()') Cancel
          button.btn.btn-default(type='button', ng-click='ok()') Join channel
      script(type="text/ng-template", id="modalChangeTheme.html")
        .modal-header
          button.close(type='button', data-dismiss='modal', aria-hidden='true') ×
          h4#myModalLabel.modal-title Select theme
        .modal-body
          .list-group
            a.list-group-item(href="#", ng-repeat="theme in themes", ng-class="{active: theme.active}", ng-click="setTheme(theme)") {{theme.name}}
        .modal-footer
          button.btn.btn-default(type='button', ng-click='ok()') Close
      #container(ng-controller="SocketController", ng-class="{connecting: connecting, disconnected: disconnected}")
        #header.dropdown(dropdown)
          span.quassel-logo
          span Quassel Web App
          small(ng-if="connecting", ng-cloak)  (connecting)
          small(ng-if="disconnected && !connecting", ng-cloak)  (disconnected)
          button.btn.btn-default.config.dropdown-toggle(data-toggle="dropdown", dropdown-toggle)
            span.glyphicon.glyphicon-cog
          ul.dropdown-menu.dropdown-menu-right(role="menu")
            li
              a(href="#", ng-click="configTheme()") Change Theme
          button.btn.btn-default.logout(type="button", ng-if="logged && !disconnected", ng-cloak, ng-click="reload()") Logout
          button.btn.btn-default.reconnect(type="button", ng-if="disconnected && !connecting", ng-cloak, ng-click="reload()") Reconnect
        .container.login(ng-if="!logged")
          .row
            .col-md-3
            .col-md-6.row.login-container
                alert(ng-if="alert != ''", ng-cloak) {{alert}}
                form#logonform(role='form', ng-submit="login()")
                  h1 Connect to Quassel Core
                  unless settings.forcedefault
                    .form-group
                      label(for='host') Server address
                      input#host.form-control(type='text', value='#{settings.default.host || ""}', ng-model="$parent.host")
                    .form-group
                      label(for='port') Server port
                      input#port.form-control(type='text', value='#{settings.default.port || ""}', ng-model="$parent.port")
                  unless settings.forcedefault && settings.default.user
                    .form-group
                      label(for='user') User name
                      input#user.form-control(type='text', value='#{settings.default.user || ""}', ng-model="$parent.user")
                  .form-group
                    label(for='password') Password
                    input#password.form-control(type='password', ng-model="$parent.password")
                  button.btn.btn-primary.btn-connect(type='submit', ng-disabled="!firstconnected || disconnected", disabled) Connect
            .col-md-3
        
        .logged.ng-hide(ng-show="logged", ng-controller="NetworkController")
            #buffer-pane.animation.pane(ng-init="shown = true", ng-class="{small: !shown}")
              .buffer-container
                .network(id="network-{{network.networkName}}", ng-class="{on: network.isConnected, off: !network.isConnected, active: buffer.id == network.getStatusBuffer().id}", ng-repeat-start="network in networks | orderBy:'networkName' track by network.networkId", dropdown)
                  span.collapsable(toggle="{{network.networkName}}-channels")
                    span.glyphicon
                  span.network-name(ng-click="showBuffer(network.getStatusBuffer())") {{network.networkName}}
                  a.dropdown-network.dropdown-toggle(data-toggle="dropdown", dropdown-toggle)
                    span.glyphicon.glyphicon-menu-hamburger
                  ul.dropdown-menu.dropdown-menu-right(role="menu")
                    li
                      a(href="#", ng-click="openModalJoinChannel(network)") Join channel
                    li(ng-if="network.isConnected")
                      a(href="#", ng-click="disconnect(network)") Disconnect
                    li(ng-if="!network.isConnected")
                      a(href="#",  ng-click="connect(network)") Connect
                .network-channels.clearfix(id="{{network.networkName}}-channels", ng-repeat-end)
                  .channel(
                        ng-model="channel"
                        drag
                        drop="onDropComplete"
                        ng-class="{on: channel.active, off: !channel.active, 'buffer-highlight': channel.highlight == 2, 'buffer-newmessage': channel.highlight == 1, active: buffer.id == channel.id}"
                        ng-repeat="channel in network._buffers | channelsFilter track by channel.id"
                        ng-if="!channel.isHidden()"
                        dropdown
                    )
                    span.channel-icon
                    span.channel-name(ng-click="showBuffer(channel)") {{channel.name}}
                    a.dropdown-channel.dropdown-toggle(data-toggle="dropdown", dropdown-toggle)
                      span.glyphicon.glyphicon-menu-hamburger
                    ul.dropdown-menu.dropdown-menu-right(role="menu")
                      li(ng-if="channel.active && channel.isChannel()")
                        a(href="#", ng-click="channelPart(channel)") Part
                      li(ng-if="!channel.active  && channel.isChannel()")
                        a(href="#", ng-click="channelJoin(channel)") Join
                      li(ng-if="!channel.active || !channel.isChannel()")
                        a(href="#", ng-confirm-click="Are you sure you want to delete this buffer permanently ?", ng-ok-click="channelDelete(channel)") Delete
              .buffer-bottom-bar
                a.showhide.right(href="#", ng-click="shown = !shown")
            #center.animation(ng-controller="FilterController")
              .topic
                #topic {{buffer.topic}}
                .btn-group.prefs(dropdown)
                  button.btn.btn-default.btn-sm.dropdown-toggle(type="button", data-toggle="dropdown", dropdown-toggle)
                    span.glyphicon.glyphicon-th-list
                  ul.dropdown-menu(role="menu")
                    li.dropdown-header Hide events
                    li(ng-repeat="fil in currentFilter")
                      a(href="#")
                        input(type="checkbox", id="filter-type-{{fil.type}}", data-message-type="{{fil.type}}", ng-model="fil.value")
                        label(for="filter-type-{{fil.type}}") {{fil.label}}
                    li.divider
                    li
                      a.btn(ng-click="setAsDefault()", href="#") Set as default
                    li
                      a.btn(ng-click="useDefault()", href="#") Use default
              ul.backlog(backlog="loadMore", parent-buffer="buffer", current-filter="currentFilter")
                li.irc-message(markerline="buffer.markerline == message.id", ng-repeat="message in messages | orderBy:'id' track by message.id", class="type-{{message.type}}", ng-class="{highlighted: message.isHighlighted()}", ng-show="!currentFilter2[message.type]", id="irc-message-{{message.id}}")
                  span.timestamp
                    span {{message.datetime | duration}}
                  span.nick(data-nickhash="{{message.sender | hash}}") {{message | decoratenick}}
                  span.message(ng-bind-html="message | decoratecontent | color")
              .input(ng-controller="InputController")
                form#messageform(ng-submit="sendMessage()")
                  input#messagebox(type='text', placeholder='Enter your message here', ng-model="inputmessage", ng-model-options="{ debounce: 100 }", caret)
            #nick-pane.animation.pane(ng-init="shown2 = true", ng-class="{small: !shown2}")
              .buffer-container
                .user(ng-repeat="user in buffer.nickUserMap | ordernicks:buffer track by user.nick")
                  span.user-icon(ng-class="{'user-icon-away': user.away, 'user-icon-active': !user.away}")
                  span.user-name(ng-class="{'user-op': buffer.isOp(user.nick), 'user-voiced': buffer.isVoiced(user.nick)}") {{user.nick}}
              .buffer-bottom-bar
                a.showhide.left(href="#", ng-click="shown2 = !shown2")

      script(src='#{settings.prefixpath}/javascripts/jquery-2.1.3.min.js')
      script(src='#{settings.prefixpath}/javascripts/angular.min.js')
      script(src='#{settings.prefixpath}/javascripts/ui-bootstrap-tpls-0.12.0.min.js')
      script(src='#{settings.prefixpath}/socket.io/socket.io.js')
      script(src='#{settings.prefixpath}/javascripts/favico-0.3.6.min.js')
      script(src='#{settings.prefixpath}/javascripts/ngSocket.js')
      script(src='#{settings.prefixpath}/javascripts/events.js')
      script(src='#{settings.prefixpath}/javascripts/angular-sanitize.min.js')
      script(src='#{settings.prefixpath}/javascripts/angular-dnd.min.js')
      script(src='#{settings.prefixpath}/javascripts/angular-notify.min.js')
      script(src='#{settings.prefixpath}/javascripts/libquassel.js')
      script(src='#{settings.prefixpath}/javascripts/json-patch.js')
      script(src='#{settings.prefixpath}/javascripts/angular-init.js')
      script(src='#{settings.prefixpath}/javascripts/angular-directive.js')
      script(src='#{settings.prefixpath}/javascripts/angular-filter.js')
      script(src='#{settings.prefixpath}/javascripts/angular-controller.js')