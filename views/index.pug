doctype html
html(ng-app="quassel", ng-controller="ConfigController")
    head
      meta(charset='utf-8')
      title Quassel Web App
      meta(http-equiv='X-UA-Compatible', content='IE=edge')
      meta(name='apple-mobile-web-app-capable', content='YES')
      meta(name='description', content='Quassel Web App')
      meta(name='author', content='JoÃ«l Charles')
      meta(name='author', content='Johannes Siipola')
      meta(name="viewport", content="width=device-width, initial-scale=1, user-scalable=no, height=device-height")
      link(rel='icon', href='favicon.ico')
      style.
        [ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak, .splash {
          display: none !important;
        }
        .ng-cloak.splash {
          display: block !important;
        }
      link(rel='stylesheet', href=settings.prefix('/stylesheets/fonts.css'))
      link(rel='stylesheet', href=settings.prefix('/stylesheets/mobile.css'))
      link(rel='stylesheet', href=settings.prefix('/stylesheets/theme-' + (settings.val.default.theme || settings.val.theme) + '.css'), theme)
    body.login-page
      include ./ng-templates/modalJoinChannel
      include ./ng-templates/modalRenameBuffer
      include ./ng-templates/modalAliases
      include ./ng-templates/modalGeneralConfig
      include ./ng-templates/modalNetworks
      include ./ng-templates/modalIdentities
      include ./ng-templates/modalIgnoreList
      include ./ng-templates/modalHighlightRuleManager
      include ./ng-templates/modalSetupWizard
      #container(ng-controller="QuasselController", ng-class="{connecting: connecting, disconnected: disconnected}")
        #header.dropdown(uib-dropdown)
          span.quassel-logo
          span Quassel Web App
          i.icon-qws.icon-lock.icon-secure(ng-if="logged && !disconnected && secure", title="The connection to your core is encrypted with SSL")
          small(ng-if="connecting", ng-cloak)  (connecting)
          small(ng-if="disconnected && !connecting", ng-cloak)  (disconnected)
          button.btn.btn-default.config.dropdown-toggle(data-toggle="dropdown", title="Options", uib-dropdown-toggle)
            i.icon-qws.icon-cog
          ul.dropdown-menu.dropdown-menu-right(role="menu", uib-dropdown-menu)
            li
              a(href="#", ng-click="configGeneral()") General Configuration
            li
              a(href="#", ng-click="configIdentities()", ng-show="displayIdentitiesConfigItem") Identities
            li
              a(href="#", ng-click="configNetworks()", ng-show="logged") Networks
            li
              a(href="#", ng-click="configAliases()", ng-show="logged") Aliases
            li
              a(href="#", ng-click="configIgnoreList()", ng-show="displayIgnoreListConfigItem") Ignore List
            li
              a(href="#", ng-click="configHighlightRules()", ng-show="displayHighlightConfigItem") Highlight Rules
            li(class="dropdown-header", ng-show="bufferViews.length") Chat lists
            li(ng-repeat="bv in bufferViews", ng-class="{active: bv.id == bufferView.id}")
              a(href="#", ng-click="setBufferView(bv)") {{bv.bufferViewName}}
            li(class="dropdown-header") Themes
            li(ng-repeat="theme in getAllThemes()", ng-class="{active: activeTheme == theme}")
              a(href="#", ng-click="setTheme(theme)") {{theme}}
          button.btn.btn-default.logout(type="button", ng-if="logged && !disconnected", ng-cloak, ng-click="logout()") Logout
          button.btn.btn-default.reconnect(type="button", ng-if="disconnected && !connecting", ng-cloak, ng-click="reload()") Reconnect
        .container.login(ng-if="!logged")
          .row.ng-cloak(ng-class="{'ng-cloak': connecting}")
            .col-md-3
            .col-md-6.row.well.login-container
                div(uib-alert, ng-if="alert != ''", ng-cloak, class="alert-warning") {{alert}}
                form#logonform(role='form', ng-submit="login()")
                  h1 Connect to Quassel Core
                  if settings.val.forcedefault
                    input(type="hidden", value=settings.val.default.host, ng-model="$parent.host")
                    input(type="hidden", value=settings.val.default.port, ng-model="$parent.port")
                  else
                    .form-group(ng-cloak)
                      label(for='host') Server address
                      input#host.form-control(type='text', value=settings.val.default.host, ng-model="$parent.host")
                    .form-group(ng-cloak)
                      label(for='port') Server port
                      input#port.form-control(type='text', value=settings.val.default.port, ng-model="$parent.port")
                  .form-group
                    label(for='user') User name
                    input#user.form-control(type='text', ng-model="$parent.user")
                  .form-group
                    label(for='password') Password
                    input#password.form-control(type='password', ng-model="$parent.password")
                  .checkbox.row
                    .col-md-6
                      label(for='remember')
                        input#remember(type='checkbox', ng-model="$parent.remember")
                        | Auto login
                    .col-md-6
                      a.pull-right(href='#', ng-click='moreoptions = !moreoptions') {{moreoptions ? 'less options' : 'more options'}}
                  .row(ng-show='moreoptions')
                    .col-md-12
                      .checkbox
                        label(for='securecoreconnection')
                          input#securecoreconnection(type='checkbox', ng-model="$parent.securecoreconnection")
                          | SSL core connection
                      .form-group.row
                        .col-md-6
                          label(for='initial-backlog-limit') Initial backlog limit
                          input.form-control#initial-backlog-limit(type='number', ng-model="$parent.initialBacklogLimit", min="0", max="9999")
                        .col-md-6
                          label(for='backlog-limit') Standard backlog limit
                          input.form-control#backlog-limit(type='number', ng-model="$parent.backlogLimit", min="0", max="9999")
                  button.btn.btn-primary.btn-block.btn-connect(type='submit') Connect
            .col-md-3
          .row.ng-cloak.splash(ng-class="{'ng-cloak': connecting}")
            .col-md-3
            .col-md-6
              p.lead.ng-cloak(ng-if="connecting") Connecting
              p.lead(ng-if="!connecting") Loading
              .progress
                .progress-bar.progress-bar-striped.active(role='progressbar', aria-valuenow="100", aria-valuemin="0", aria-valuemax="100", style="width: 100%")
                  span.sr-only Loading
            .col-md-3
        .logged.ng-hide(ng-show="logged", ng-controller="NetworkController")
          #buffer-pane.animation.pane(ng-class="{small: !shown}")
            .buffer-container(highlight-container)
              .loader(ng-if='bufferView === null && (networkscount === null || networkscount > 0)')
                span.quassel-logo.mini
                | Loading
              .well(ng-if="networkscount === 0")
                div.alert.alert-info You haven't configured a network yet
                button.btn.btn-block.btn-default(type="button", ng-click="configNetworks()") Add a network
              .network(
                    ng-show='bufferView !== null'
                    id="network-{{network.networkName}}"
                    class="buffer-highlight-{{network.statusBuffer.highlight}}"
                    ng-class="{on: network.isConnected, off: !network.isConnected, active: buffer.id == network.statusBuffer.id}"
                    ng-repeat-start="network in networks | orderBy:'networkName' track by network.networkId"
                    ng-if="!bufferView.hideInactiveNetworks || network.isConnected"
                    uib-dropdown
                    dropdown-contextmenu
                )
                span.collapsable(ng-click="network.collapsed = !network.collapsed")
                  i.icon-qws(ng-class="network.collapsed ? 'icon-up-open' : 'icon-down-open'")
                span.network-name(ng-click="showBuffer(network.statusBuffer)") {{network.networkName}}
                a.dropdown-network.dropdown-toggle(data-toggle="dropdown", uib-dropdown-toggle)
                  i.icon-qws.icon-menu
                ul.dropdown-menu.dropdown-menu-right(role="menu", uib-dropdown-menu)
                  li
                    a(href="#", ng-click="openModalJoinChannel(network)") Join channel
                  li(ng-if="network.isConnected")
                    a(href="#", ng-click="disconnect(network)") Disconnect
                  li(ng-if="!network.isConnected")
                    a(href="#", ng-click="connect(network)") Connect
                  li
                    a(href="#", ng-click="toggleShowHide()") Show / Hide chats
              .network-channels.clearfix(
                    ng-show='bufferView !== null'
                    id="{{network.networkName}}-channels"
                    uib-collapse="network.collapsed"
                    ng-if="!bufferView.hideInactiveNetworks || network.isConnected"
                    ng-repeat-end
                )
                .channel(
                      ng-model="channel"
                      drag
                      drop="onDropComplete"
                      class="buffer-highlight-{{channel.highlight}}"
                      ng-class="{on: channel.isActive, off: !channel.isActive, active: buffer.id == channel.id}"
                      ng-repeat="channel in network._buffers | channelsFilter:bufferView:showhidden | orderBy:'id':false:comparator track by channel.id"
                      uib-dropdown
                      dropdown-contextmenu
                  )
                  span.channel-icon(ng-click="showhidden ? cycleHiddenState(channel) : showBuffer(channel)")
                    i.icon-qws(
                        class="hidden-status"
                        ng-show="showhidden"
                        ng-class="{'perm': bufferView.isPermanentlyRemoved(channel.id), 'temp': bufferView.isTemporarilyRemoved(channel.id)}"
                        title="{{bufferView.isPermanentlyRemoved(channel.id) ? 'Permanently hidden' : bufferView.isTemporarilyRemoved(channel.id) ? 'Temporarily hidden' : 'Visible'}}"
                      )
                  span.channel-name(ng-click="showBuffer(channel)", title="{{channel.name}}") {{channel.name}}
                  a.dropdown-channel.dropdown-toggle(data-toggle="dropdown", uib-dropdown-toggle)
                    i.icon-qws.icon-menu
                  ul.dropdown-menu.dropdown-menu-right(role="menu", uib-dropdown-menu)
                    li(ng-if="channel.active && channel.isChannel")
                      a(href="#", ng-click="channelPart(channel)") Part
                    li(ng-if="!channel.active && channel.isChannel")
                      a(href="#", ng-click="channelJoin(channel)") Join
                    li(ng-if="!channel.active || !channel.isChannel")
                      a(href="#", ng-confirm-click="Are you sure you want to delete this buffer permanently ?", ng-ok-click="channelDelete(channel)") Delete
                    li(class="dropdown-header") Show / Hide
                    li(ng-if="!bufferView.isPermanentlyRemoved(channel.id)")
                      a(href="#", ng-click="channelHidePermanently(channel)") Hide permanently
                    li(ng-if="!bufferView.isTemporarilyRemoved(channel.id)")
                      a(href="#", ng-click="channelHideTemporarily(channel)") Hide temporarily
                    li(ng-if="bufferView.isHidden(channel.id)")
                      a(href="#", ng-click="channelUnhide(channel)") Unhide
                    li(ng-if="!channel.isChannel")
                      a(href="#", ng-click="openModalRenameBuffer(channel)") Rename
            .buffer-bottom-bar
              a.btn.showhide.right(href="javascript:void(0)", ng-click="shown = !shown")
                i.icon-qws(ng-class="shown ? 'icon-left-open' : 'icon-right-open'")
          #center.animation(ng-controller="FilterController")
            .topic
              #topic(ng-bind-html="buffer.topic | linky:'_blank' | color")
              .btn-group.prefs(uib-dropdown, auto-close="outsideClick", ng-show="currentFilter.length")
                button.btn.btn-default.btn-sm.dropdown-toggle(type="button", data-toggle="dropdown", uib-dropdown-toggle)
                  i.icon-qws.icon-filter
                ul.dropdown-menu(role="menu", uib-dropdown-menu)
                  li.dropdown-header Hide events
                  li(ng-repeat="fil in currentFilter")
                    a(href="#")
                      label.checkbox
                        input(type="checkbox", data-message-type="{{::fil.type}}", ng-model="fil.value")
                        | {{::fil.label}}
                  li.divider
                  li
                    a.btn(ng-click="setAsDefault()", href="#") Set as default
                  li
                    a.btn(ng-click="useDefault()", href="#") Use default
            ul.backlog(backlog="loadMore", scroll-glue)
              li.irc-message(
                    ng-repeat-start="message in messages track by message.sid"
                    class="type-{{::message.type}}"
                    ng-class="{highlighted: message.isHighlighted}"
                    ng-if="!currentFilter2[message.type]"
                )
                span.timestamp
                  span {{::message.datetime | duration}}
                span.nick(data-nickhash="{{message.type == 1 ? message.sender : '' | hash}}") {{::message | decoratenick}}
                irc-message.message(message="::message")
              li.markerline.irc-message(irc-markerline, ng-if="buffer.markerline == message.id", ng-repeat-end)
                span
                span
                span
            .input(ng-controller="InputController")
              form#messageform(ng-submit="sendMessage()")
                .formatter
                  .btn.btn-default.btn-xs.visible-xs-block.handle(title="Complete nick", ng-mousedown="sendTab($event, 'messagebox')")
                    i.icon-qws.icon-people
                #messagebox(contenteditable, mimic-input="true", focusonfocus, ng-attr-placeholder='{{nick || "Enter your message here"}}', ng-model="inputmessage", caret)
                .formatter
                  button.btn.btn-default.btn-xs.handle(type="button", ng-click="formattervisible = !formattervisible", title="Format")
                    i.icon-qws.icon-brush
                  .formatter-content.btn-group(ng-show="formattervisible", role="group")
                    button.btn.btn-default.btn-sm(ng-click="execCommand('removeFormat')", type="button", title="Remove format")
                      i.icon-qws.icon-eraser
                    button.btn.btn-default.btn-sm(ng-click="execCommand('bold')", type="button", title="Bold")
                      i.icon-qws.icon-bold
                    button.btn.btn-default.btn-sm(ng-click="execCommand('italic')", type="button", title="Italic")
                      i.icon-qws.icon-italic
                    button.btn.btn-default.btn-sm(ng-click="execCommand('underline')", type="button", title="Underline")
                      i.icon-qws.icon-underline
                    .btn-group.formatter-content.formatter-color.dropup(role="group", uib-dropdown)
                      button.btn.btn-default.btn-sm.dropdown-toggle(type="button", data-toggle="dropdown", uib-dropdown-toggle)
                        i.icon-qws.icon-tint
                      ul.dropdown-menu.dropdown-menu-right.list-group(role="menu", uib-dropdown-menu)
                        li.list-group-item
                          h4.list-group-item-heading Foreground color
                          colorpicker.list-group-item-text(colopicker-mode="foreColor")
                        li.list-group-item
                          h4.list-group-item-heading Background color
                          colorpicker.list-group-item-text(colopicker-mode="backColor")
          #nick-pane.animation.pane(ng-class="{small: !shown2}")
            .buffer-container
              .user(ng-repeat="user in buffer.users | ordernicks:buffer track by user.nick", uib-dropdown, dropdown-contextmenu)
                span.user-icon
                  i.icon-qws.icon-circle(ng-class="user.away ? 'user-away' : 'user-not-away'")
                span.user-name(ng-class="userClass(buffer, user.nick)", title="{{user | usertitle:buffer}}") {{user.nick}}
                a.dropdown-user.dropdown-toggle(data-toggle="dropdown", uib-dropdown-toggle)
                  i.icon-qws.icon-menu
                ul.dropdown-menu.dropdown-menu-right(role="menu", uib-dropdown-menu)
                  li
                    a(href="#", ng-click="userQuery(user)") Query
                  li
                    a(href="#", ng-click="whois(user)") Whois
            .buffer-bottom-bar
              a.btn.showhide.left(href="javascript:void(0)", ng-click="shown2 = !shown2")
                i.icon-qws(ng-class="shown2 ? 'icon-right-open' : 'icon-left-open'")

      script(src=settings.prefix('/javascripts/jquery.min.js'))
      script(src=settings.prefix('/javascripts/angular.min.js'))
      script(src=settings.prefix('/javascripts/angular-aria.min.js'))
      script(src=settings.prefix('/javascripts/ui-bootstrap-tpls.min.js'))
      script(src=settings.prefix('/javascripts/bootstrap-tokenfield.min.js'))
      script(src=settings.prefix('/javascripts/scrollglue.js'))
      script(src=settings.prefix('/javascripts/favico-0.3.10.min.js'))
      script(src=settings.prefix('/javascripts/ng-quassel.js'))
      script(src=settings.prefix('/javascripts/angular-sanitize.js'))
      script(src=settings.prefix('/javascripts/angular-dnd.min.js'))
      script(src=settings.prefix('/javascripts/angular-notify.min.js'))
      script(src=settings.prefix('/javascripts/libquassel.js'))
      script(src=settings.prefix('/javascripts/angular-init.js'))
      script(src=settings.prefix('/javascripts/angular-directive.js'))
      script(src=settings.prefix('/javascripts/angular-filter.js'))
      script(src=settings.prefix('/javascripts/angular-controller.js'))
